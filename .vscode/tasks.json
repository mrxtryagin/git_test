{
    // See https://go.microsoft.com/fwlink/?LinkId=733558 
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "type": "process", // process是vsc把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
            "label": "Compile", // 任务名称，与launch.json的preLaunchTask相对应
            "command": "E:\\Qt\\Qt5.14.1\\Tools\\mingw730_64\\bin\\gcc.exe",// 要使用的编译器，C++用g++
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe",
                "-ggdb3",   // 生成和调试有关的信息
                "-Wall",    // 开启额外警告
                "-static-libgcc",   // 静态链接
                //"-std=c++17",       // 使用c++17标准,c不需要
                "-finput-charset=UTF-8",    //输入编译器文本编码 默认为UTF-8
                "-fexec-charset=GBk",   //输出exe文件的编码
                "-D _USE_MATH_DEFINES"
            ],
            "group": {
                "kind": "build",
                "isDefault": true // 不为true时ctrl shift B就要手动选择了
            },
            "options": {
                "cwd": "E:\\Qt\\Qt5.14.1\\Tools\\mingw730_64\\bin"
            },
            "problemMatcher": [
                "$gcc"// 此选项可以捕捉编译时终端里的报错信息；但因为有Lint，再开这个可能有双重报错
            ],
            "presentation": {
                "echo": true,
                "reveal": "always", // 在“终端”中显示编译信息的策略，可以为always，silent，never
                 "focus": false,
                 "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
        }
    ]
}
